generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  emailId   String    @unique @map("email_id")
  password  String
  username  String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  posts     Post[]
  comments  Comment[]
  logins    LoginRecord[]

  @@map("users")
}

model Post {
  id        Int       @id @default(autoincrement())
  title     String    @db.VarChar(30)
  content   String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  authorId  Int       @map("author_id")
  author    User      @relation(fields: [authorId], references: [id])
  comments  Comment[]

  @@map("posts")
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  authorId  Int      @map("author_id")
  postId    Int      @map("post_id")
  author    User     @relation(fields: [authorId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])

  @@map("comments")
}

model LoginRecord {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  ipAddress String   @map("ip_address")
  loginAt   DateTime @default(now()) @map("login_at")
  user      User     @relation(fields: [userId], references: [id])

  @@map("login_records")
  @@index([userId])
  @@index([loginAt])
}
